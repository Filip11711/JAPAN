// <auto-generated />
using System;
using JAPAN.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JAPAN.Migrations
{
    [DbContext(typeof(JapanContext))]
    [Migration("20240507115911_GenerateAutoKey")]
    partial class GenerateAutoKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ispitpitanje", b =>
                {
                    b.Property<int>("Idispit")
                        .HasColumnType("integer")
                        .HasColumnName("idispit");

                    b.Property<int>("Idpitanje")
                        .HasColumnType("integer")
                        .HasColumnName("idpitanje");

                    b.HasKey("Idispit", "Idpitanje")
                        .HasName("ispitpitanje_pkey");

                    b.HasIndex("Idpitanje");

                    b.ToTable("ispitpitanje", (string)null);
                });

            modelBuilder.Entity("JAPAN.Data.Entities.ForumOdgovor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Idkorisnik")
                        .HasColumnType("integer")
                        .HasColumnName("idkorisnik");

                    b.Property<int>("Idpitanje")
                        .HasColumnType("integer")
                        .HasColumnName("idpitanje");

                    b.Property<DateOnly>("Kreirano")
                        .HasColumnType("date")
                        .HasColumnName("kreirano");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("sadrzaj");

                    b.HasKey("Id")
                        .HasName("forum_odgovor_pkey");

                    b.HasIndex("Idkorisnik");

                    b.HasIndex("Idpitanje");

                    b.ToTable("forum_odgovor", (string)null);
                });

            modelBuilder.Entity("JAPAN.Data.Entities.ForumPitanje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Idkorisnik")
                        .HasColumnType("integer")
                        .HasColumnName("idkorisnik");

                    b.Property<DateOnly>("Kreirano")
                        .HasColumnType("date")
                        .HasColumnName("kreirano");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("naslov");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("sadrzaj");

                    b.HasKey("Id")
                        .HasName("forum_pitanje_pkey");

                    b.HasIndex("Idkorisnik");

                    b.ToTable("forum_pitanje", (string)null);
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Ispit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Idtezina")
                        .HasColumnType("integer")
                        .HasColumnName("idtezina");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("naziv");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("opis");

                    b.Property<double>("Pozicija")
                        .HasColumnType("double precision")
                        .HasColumnName("pozicija");

                    b.HasKey("Id")
                        .HasName("ispit_pkey");

                    b.HasIndex("Idtezina");

                    b.ToTable("ispit", (string)null);
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("email");

                    b.Property<int>("Iduloga")
                        .HasColumnType("integer")
                        .HasColumnName("iduloga");

                    b.Property<string>("Korisnickoime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("korisnickoime");

                    b.HasKey("Id")
                        .HasName("korisnik_pkey");

                    b.HasIndex("Iduloga");

                    b.ToTable("korisnik", (string)null);
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Odgovor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Idpitanje")
                        .HasColumnType("integer")
                        .HasColumnName("idpitanje");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("tekst");

                    b.Property<int>("Tocno")
                        .HasColumnType("integer")
                        .HasColumnName("tocno");

                    b.HasKey("Id")
                        .HasName("odgovor_pkey");

                    b.HasIndex("Idpitanje");

                    b.ToTable("odgovor", (string)null);
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Pitanje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("tekst");

                    b.HasKey("Id")
                        .HasName("pitanje_pkey");

                    b.ToTable("pitanje", (string)null);
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Statistika", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Idispit")
                        .HasColumnType("integer")
                        .HasColumnName("idispit");

                    b.Property<int>("Idkorisnik")
                        .HasColumnType("integer")
                        .HasColumnName("idkorisnik");

                    b.Property<int?>("Idtecaj")
                        .HasColumnType("integer")
                        .HasColumnName("idtecaj");

                    b.Property<string>("Rezultat")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("rezultat");

                    b.Property<DateOnly>("Zavrseno")
                        .HasColumnType("date")
                        .HasColumnName("zavrseno");

                    b.HasKey("Id")
                        .HasName("statistika_pkey");

                    b.HasIndex("Idispit");

                    b.HasIndex("Idkorisnik");

                    b.HasIndex("Idtecaj");

                    b.ToTable("statistika", (string)null);
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Tecaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Idtezina")
                        .HasColumnType("integer")
                        .HasColumnName("idtezina");

                    b.Property<int>("Idtipsadrzaj")
                        .HasColumnType("integer")
                        .HasColumnName("idtipsadrzaj");

                    b.Property<DateOnly>("Kreirano")
                        .HasColumnType("date")
                        .HasColumnName("kreirano");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("naziv");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("opis");

                    b.Property<double>("Pozicija")
                        .HasColumnType("double precision")
                        .HasColumnName("pozicija");

                    b.Property<string>("Sadrzaj")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("sadrzaj");

                    b.HasKey("Id")
                        .HasName("tecaj_pkey");

                    b.HasIndex("Idtezina");

                    b.HasIndex("Idtipsadrzaj");

                    b.ToTable("tecaj", (string)null);
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Tezina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("naziv");

                    b.HasKey("Id")
                        .HasName("tezina_pkey");

                    b.ToTable("tezina", (string)null);
                });

            modelBuilder.Entity("JAPAN.Data.Entities.TipSadrzaj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("naziv");

                    b.HasKey("Id")
                        .HasName("tip_sadrzaj_pkey");

                    b.ToTable("tip_sadrzaj", (string)null);
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Uloga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("naziv");

                    b.HasKey("Id")
                        .HasName("uloga_pkey");

                    b.ToTable("uloga", (string)null);
                });

            modelBuilder.Entity("Ispitpitanje", b =>
                {
                    b.HasOne("JAPAN.Data.Entities.Ispit", null)
                        .WithMany()
                        .HasForeignKey("Idispit")
                        .IsRequired()
                        .HasConstraintName("ispitpitanje_idispit_fkey");

                    b.HasOne("JAPAN.Data.Entities.Pitanje", null)
                        .WithMany()
                        .HasForeignKey("Idpitanje")
                        .IsRequired()
                        .HasConstraintName("ispitpitanje_idpitanje_fkey");
                });

            modelBuilder.Entity("JAPAN.Data.Entities.ForumOdgovor", b =>
                {
                    b.HasOne("JAPAN.Data.Entities.Korisnik", "IdkorisnikNavigation")
                        .WithMany("ForumOdgovors")
                        .HasForeignKey("Idkorisnik")
                        .IsRequired()
                        .HasConstraintName("forum_odgovor_idkorisnik_fkey");

                    b.HasOne("JAPAN.Data.Entities.ForumPitanje", "IdpitanjeNavigation")
                        .WithMany("ForumOdgovors")
                        .HasForeignKey("Idpitanje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("forum_odgovor_idpitanje_fkey");

                    b.Navigation("IdkorisnikNavigation");

                    b.Navigation("IdpitanjeNavigation");
                });

            modelBuilder.Entity("JAPAN.Data.Entities.ForumPitanje", b =>
                {
                    b.HasOne("JAPAN.Data.Entities.Korisnik", "IdkorisnikNavigation")
                        .WithMany("ForumPitanjes")
                        .HasForeignKey("Idkorisnik")
                        .IsRequired()
                        .HasConstraintName("forum_pitanje_idkorisnik_fkey");

                    b.Navigation("IdkorisnikNavigation");
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Ispit", b =>
                {
                    b.HasOne("JAPAN.Data.Entities.Tezina", "IdtezinaNavigation")
                        .WithMany("Ispits")
                        .HasForeignKey("Idtezina")
                        .IsRequired()
                        .HasConstraintName("ispit_idtezina_fkey");

                    b.Navigation("IdtezinaNavigation");
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Korisnik", b =>
                {
                    b.HasOne("JAPAN.Data.Entities.Uloga", "IdulogaNavigation")
                        .WithMany("Korisniks")
                        .HasForeignKey("Iduloga")
                        .IsRequired()
                        .HasConstraintName("korisnik_iduloga_fkey");

                    b.Navigation("IdulogaNavigation");
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Odgovor", b =>
                {
                    b.HasOne("JAPAN.Data.Entities.Pitanje", "IdpitanjeNavigation")
                        .WithMany("Odgovors")
                        .HasForeignKey("Idpitanje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("odgovor_idpitanje_fkey");

                    b.Navigation("IdpitanjeNavigation");
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Statistika", b =>
                {
                    b.HasOne("JAPAN.Data.Entities.Ispit", "IdispitNavigation")
                        .WithMany("Statistikas")
                        .HasForeignKey("Idispit")
                        .HasConstraintName("statistika_idispit_fkey");

                    b.HasOne("JAPAN.Data.Entities.Korisnik", "IdkorisnikNavigation")
                        .WithMany("Statistikas")
                        .HasForeignKey("Idkorisnik")
                        .IsRequired()
                        .HasConstraintName("statistika_idkorisnik_fkey");

                    b.HasOne("JAPAN.Data.Entities.Tecaj", "IdtecajNavigation")
                        .WithMany("Statistikas")
                        .HasForeignKey("Idtecaj")
                        .HasConstraintName("statistika_idtecaj_fkey");

                    b.Navigation("IdispitNavigation");

                    b.Navigation("IdkorisnikNavigation");

                    b.Navigation("IdtecajNavigation");
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Tecaj", b =>
                {
                    b.HasOne("JAPAN.Data.Entities.Tezina", "IdtezinaNavigation")
                        .WithMany("Tecajs")
                        .HasForeignKey("Idtezina")
                        .IsRequired()
                        .HasConstraintName("tecaj_idtezina_fkey");

                    b.HasOne("JAPAN.Data.Entities.TipSadrzaj", "IdtipsadrzajNavigation")
                        .WithMany("Tecajs")
                        .HasForeignKey("Idtipsadrzaj")
                        .IsRequired()
                        .HasConstraintName("tecaj_idtipsadrzaj_fkey");

                    b.Navigation("IdtezinaNavigation");

                    b.Navigation("IdtipsadrzajNavigation");
                });

            modelBuilder.Entity("JAPAN.Data.Entities.ForumPitanje", b =>
                {
                    b.Navigation("ForumOdgovors");
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Ispit", b =>
                {
                    b.Navigation("Statistikas");
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Korisnik", b =>
                {
                    b.Navigation("ForumOdgovors");

                    b.Navigation("ForumPitanjes");

                    b.Navigation("Statistikas");
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Pitanje", b =>
                {
                    b.Navigation("Odgovors");
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Tecaj", b =>
                {
                    b.Navigation("Statistikas");
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Tezina", b =>
                {
                    b.Navigation("Ispits");

                    b.Navigation("Tecajs");
                });

            modelBuilder.Entity("JAPAN.Data.Entities.TipSadrzaj", b =>
                {
                    b.Navigation("Tecajs");
                });

            modelBuilder.Entity("JAPAN.Data.Entities.Uloga", b =>
                {
                    b.Navigation("Korisniks");
                });
#pragma warning restore 612, 618
        }
    }
}
